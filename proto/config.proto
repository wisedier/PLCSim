syntax = "proto2";

package config;

enum DataTypeCategory {
    BOOL = 0;
    BYTE = 1;
    WORD = 2;
    DWORD = 3;
    QWORD = 4;

    CHAR = 5;
    SHORT = 6;
    INT = 7;
    LONG = 8;

    FLOAT = 9;
    DOUBLE = 10;

    TIME = 11;
    DATE = 12;
    DATETIME = 13;

    // Non-elementary data types
    DERIVED = 14;
    POU = 15;
    ARRAY = 16;
    NOT_ASSIGNED = 17;
}

enum FieldInterfaceType {
    VAR_INPUT = 0;
    VAR_OUTPUT = 1;
    VAR_IN_OUT = 2;
    VAR = 3;
    VAR_TEMP = 4;
    VAR_EXTERNAL = 5;
    VAR_GLOBAL = 6;
    VAR_ACCESS = 7;
    VAR_EXPLICIT_STORAGE = 8;
    NA = 9;
}

enum FieldQualifiers {
    R_EDGE = 0;
    F_EDGE = 1;
    READ_ONLY = 2;
    READ_WRITE = 3;
    NONE = 4;
}

enum MemType {
    INPUT_MEM = 0;
    OUTPUT_MEM = 1;
    RAM_MEM = 2;
}

enum TaskType {
    INTERVAL = 0;
    INTERRUPT = 1;
}

enum PoUType {
    FC = 0;
    FB = 1;
    PROGRAM = 2;
    NOA = 3;
}

enum LogLevel {
    NOTSET = 0; // NONE
    DEBUG = 1; // NOTICE
    INFO = 2; // INFO
    WARN = 3; // -
    ERROR = 4; // ERROR
    FATAL = 5; // VERBOSE
};

message FieldStorageSpec {
    optional MemType mem_type = 1;
    optional int64 byte_offset = 2;
    optional int32 bit_offset = 3;
    optional string full_storage_spec = 4;
}

message DataTypeField {
    required string field_name = 1;
    required string field_datatype_name = 2;
    optional double range_min = 3;
    optional double range_max = 4;
    optional string initial_value = 5;
    optional int32 dimension_1 = 6;
    optional int32 dimension_2 = 7;
    optional FieldInterfaceType intf_type = 8 [default = NA];
    optional FieldStorageSpec field_storage_spec = 9;
    optional FieldQualifiers field_qualifier = 10 [default = NONE];
}

message DataTypeSpec {
    optional double range_min = 1;
    optional double range_max = 2;
    optional string initial_value = 3;
    optional int32 dimension_1 = 4;
    optional int32 dimension_2 = 5;
}

message PoUCode {
    repeated string insn = 1;
}

message DataType {
    required string name = 1;
    optional DataTypeCategory datatype_category = 2 [default = POU];
    optional PoUType pou_type = 3 [default = PROGRAM];
    repeated DataTypeField datatype_field = 4;
    optional DataTypeSpec datatype_spec = 5;
    optional PoUCode code_body = 6;
}

message SFBSpecification {
    required string sfb_name = 1;
    required int64 mu_exec_time_ns = 2;
    required int64 sigma_exec_time_ns = 3;
}

message SFCSpecification {
    required string sfc_name = 1;
    required int64 mu_exec_time_ns = 2;
    required int64 sigma_exec_time_ns = 3;
}

message InstructionSpecification {
    required string ins_name = 1;
    required int64 mu_exec_time_ns = 2;
    required int64 sigma_exec_time_ns = 3;
}

message IntervalTaskParams {
    required int64 interval_ms = 1;
}

message InterruptTaskParams {
    required string trigger_variable_field = 1;
}

message IntervalTaskSpecification {
    required string task_name = 1;
    required int32 priority = 2;
    required IntervalTaskParams interval_task_params = 3;
}

message InterruptTaskSpecification {
    required string task_name = 1;
    required int32 priority = 2;
    required InterruptTaskParams interrupt_task_params = 3;
}

message ProgramVariableInitialization {
    required string pou_variable_field_name = 1;
    required string mapped_variable_field_name = 2;
}

message ProgramSpecification {
    required string program_name = 1;
    required string pou_variable_type = 2;
    required string task_name = 3;
    repeated ProgramVariableInitialization initialization_maps = 4;
}

message ResourceSpecification {
    required string resource_name = 1;
    optional int64 input_mem_size_bytes = 2;
    optional int64 output_mem_size_bytes = 3;
    optional DataType resource_global_var = 4;
    repeated DataType pou_var = 5;
    optional IntervalTaskSpecification interval_task = 7;
    repeated InterruptTaskSpecification interrupt_tasks = 8;
    repeated ProgramSpecification programs = 9;

}

message MachineSpecification {
    required int32 num_cpus = 1;
    optional int64 ram_mem_size_bytes = 2;
    optional int64 random_number_seed = 3;
    repeated InstructionSpecification ins_spec = 4;
    repeated SFCSpecification sfc_spec = 5;
    repeated SFBSpecification sfb_spec = 6;
    repeated ResourceSpecification resource_spec = 7;
}

message Specification {
    optional string config_name = 1;
    optional LogLevel log_level = 2;
    optional string log_file_path = 3;
    required int32 run_time_secs = 4;
    repeated DataType datatype_declaration = 5;
    optional DataType config_global_pou_var = 6;
    optional DataType config_access_pou_var = 7;
    required MachineSpecification machine_spec = 8;
}

